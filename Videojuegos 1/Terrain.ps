Texture2D shaderTexture[5];
SamplerState SampleType;

cbuffer MaterialBuffer : register(b1)
{
	float4 materialColor;
};

cbuffer LightBuffer : register(b2)
{
    float4 ambientColor;
	float4 diffuseColor;
	float3 lightDirection;
	float padding;
};

struct PixelInputType
{
    float4 position : SV_POSITION;
	float2 tex : TEXCOORD0;
	float3 normal : NORMAL;
};

float4 PixelProgram(PixelInputType input) : SV_TARGET
{
	float3 lightDir;
	float lightIntensity;
	float4 color;
	color = ambientColor;

	// Invert the light direction for calculations.
    lightDir = -lightDirection;

    // Calculate the amount of light on this pixel.
    lightIntensity = saturate(dot(bumpNormal, lightDir));
	color = saturate(resultColor*lightIntensity);

    return color;
}
